/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package userInterface;

import filtrosNoLineales.FiltroDelPuntoMedio;
import filtrosNoLineales.FiltroInferiorContraArmonico;
import filtrosNoLineales.FiltroDelMaximo;
import filtrosNoLineales.FiltroInferiorGeometrico;
import filtrosNoLineales.FiltroMaxMin;
import filtrosNoLineales.FiltroMediaAritmetica;
import filtrosNoLineales.FiltroInferiorArmonico;
import filtrosNoLineales.FiltroAlfaTrimmed;
import filtrosNoLineales.FiltroMediana;
import filtrosNoLineales.FiltroDelMinimo;
import Model.Histogram;
import Model.ImageData;
import Model.ImageDataByChannels;
import Model.ImageReader;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JFileChooser;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JPanel;

/**
 *
 * @author tony
 */
public class FiltroNoLineal extends javax.swing.JFrame {

    /**
     * Creates new form FiltroNoLineal
     */
    private ImageData image1, imageAns;
    private ImagePanel ip1, ipAns;
    private HistogramPanel hp1, hpAns;
    private int maxP;
    private Show showContent;
    private String nombre;
    public FiltroNoLineal(app mainFrame) {
        initComponents();
        
        showContent = new Show(mainFrame, this);
        ip1 = null;
        hp1 = null;
        if(mainFrame.currentWindow != null){
            this.image1 = mainFrame.currentWindow.getId();
            ip1 = showContent.drawImage(image1, ip1, imagePanel1);
            hp1 = showContent.drawHisto(image1, hp1, histo1, Color.blue);
        }
        jLabel1.setVisible(false);
        jSpinner1.setVisible(false);
        this.setVisible(true);
        this.nombre = showContent.getMainFrame().currentWindow.fileName;
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        imagePanel1 = new javax.swing.JPanel();
        histo1 = new javax.swing.JPanel();
        imagePanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        histo2 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("abrir imagen");

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout histo1Layout = new javax.swing.GroupLayout(histo1);
        histo1.setLayout(histo1Layout);
        histo1Layout.setHorizontalGroup(
            histo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        histo1Layout.setVerticalGroup(
            histo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout imagePanel2Layout = new javax.swing.GroupLayout(imagePanel2);
        imagePanel2.setLayout(imagePanel2Layout);
        imagePanel2Layout.setHorizontalGroup(
            imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        imagePanel2Layout.setVerticalGroup(
            imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la opcion", "Alfa Trimmed", "Maximo", "Minimo", "Punto medio", "Inferior armonico", "inferior contra armonico", "inferior geometrico", "MaxMin", "MediaAritmetica", "Mediana" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Aplicar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar Imagen");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout histo2Layout = new javax.swing.GroupLayout(histo2);
        histo2.setLayout(histo2Layout);
        histo2Layout.setHorizontalGroup(
            histo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        histo2Layout.setVerticalGroup(
            histo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona Mascara", "Fila", "Columna", "Diamante", "Cruz", "Equis", "Cuadrado" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel1.setText("elemento a quitar");

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jButton4.setText("Aplicar todos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(histo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imagePanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imagePanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(histo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 209, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(imagePanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(histo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(histo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Guardar imagen
      
        String filtroName = (String)jComboBox1.getSelectedItem();
        String mascara = (String)jComboBox2.getSelectedItem();
        Window formatWindow = new Window(imageAns, nombre + "_" + filtroName + "_" + mascara);
        formatWindow.setImage2show(imageAns.getImageGray());
        showContent.setUpWindow(formatWindow);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // Seleccionar opcion
        int idx = jComboBox1.getSelectedIndex();
        if(idx == 1){//alpha trimmed
            jLabel1.setVisible(true);
            jSpinner1.setVisible(true);
        }else{
            jLabel1.setVisible(false);
            jSpinner1.setVisible(false);
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Aplicar filtro
        int idx = jComboBox1.getSelectedIndex();
 //       FiltroNoLineal fnl;
        int ans[][] = new int[image1.getWidth()][image1.getHeight()];
        int mascara = jComboBox2.getSelectedIndex();
        int elementos[] = {0, 5, 5, 13, 9, 9, 25 };
        switch (idx) {
            case 0:
                showMessageDialog(rootPane, "Seleccione el tipo de filtro");
                break;
            case 1:
                {
                    //Alfa Trimmed
                    FiltroAlfaTrimmed fnl = new FiltroAlfaTrimmed(mascara, elementos[mascara]);
                    int p = (int)jSpinner1.getValue();
                    ans = fnl.filtrarImagenPorAlfaTrimmed(image1.getArray(), image1.getWidth(), image1.getHeight(), p);
                    break;
                }
            case 2:
                {
                    //Maximo
                    FiltroDelMaximo fnl = new FiltroDelMaximo(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenPorMaximo(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            case 3:
                {
                    //Minimo
                    FiltroDelMinimo fnl = new FiltroDelMinimo(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenPorMinimo(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            case 4:
                {
                    //Punto medio
                    FiltroDelPuntoMedio fnl = new FiltroDelPuntoMedio(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenDelPuntoMedio(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            case 5:
                {
                    //Inferior armonico
                    FiltroInferiorArmonico fnl = new FiltroInferiorArmonico(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenPorInferiorArmonico(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            case 6:
                {
                    //inferior contra armonico
                    FiltroInferiorContraArmonico fnl = new FiltroInferiorContraArmonico(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenPorContraArmonico(image1.getArray(), image1.getWidth(), image1.getHeight(), 2.0);
                    break;
                }
            case 7:
                {
                    //inferior geometrico
                    FiltroInferiorGeometrico fnl = new FiltroInferiorGeometrico(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenPorInferiorGeometrico(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            case 8:
                {
                    //MaxMin
                    FiltroMaxMin fnl = new FiltroMaxMin(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenConMaxMin(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            case 9:
                {
                    //MediaAritmetica
                    FiltroMediaAritmetica fnl = new FiltroMediaAritmetica(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenMediaAritmetica(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            case 10:
                {
                    //Mediana
                    FiltroMediana fnl = new FiltroMediana(mascara, elementos[mascara]);
                    ans = fnl.filtrarImagenPorMediana(image1.getArray(), image1.getWidth(), image1.getHeight());
                    break;
                }
            default:
                break;
        }
        
        
        double ansArray[][] = new double[ans.length][ans[0].length];
        for(int i = 0; i < image1.getHeight(); i++){
            for(int j = 0; j < image1.getWidth(); j++){
                ansArray[i][j] = ans[i][j];
            }
        }
        imageAns = new ImageDataByChannels(image1, image1.currentChannel, ansArray);
        ipAns = showContent.drawImage(imageAns, ipAns, imagePanel2);
        hpAns = showContent.drawHisto(imageAns, hpAns, histo2, Color.pink);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        int elementos[] = {0, 5, 5, 13, 9, 9, 25 };
        maxP= elementos[jComboBox2.getSelectedIndex()];
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        //cambio de p
       if((int)jSpinner1.getValue() > maxP) jSpinner1.setValue(maxP);
       if((int)jSpinner1.getValue() < 0) jSpinner1.setValue(0);
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Aplicar a todas las mascaras
        for(int i = 1; i <= 10; i++){
            for(int j = 1; j <= 6; j++){
                jComboBox1.setSelectedIndex(i);
                jComboBox2.setSelectedIndex(j);
                jButton2ActionPerformed(evt);
                jButton3ActionPerformed(evt);
            }
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel histo1;
    private javax.swing.JPanel histo2;
    private javax.swing.JPanel imagePanel1;
    private javax.swing.JPanel imagePanel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
